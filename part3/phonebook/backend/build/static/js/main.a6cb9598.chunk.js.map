{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Persons","props","persons","filter","person","name","toLowerCase","includes","search","map","key","id","number","onClick","deletePerson","PersonForm","onSubmit","addPerson","value","onChange","handleName","num","handleNum","type","Filter","handleSearch","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newNum","setNewNum","newSearch","setNewSearch","setMessage","useEffect","personService","initialPersons","event","target","preventDefault","personObject","some","window","alert","confirm","p","find","returnedPerson","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6cb9598.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = (props) => {\r\n  return (\r\n    <ul>\r\n    {props.persons.filter(person => person.name.toLowerCase().includes(props.search.toLowerCase())).map((person) => \r\n      <p key={person.id}>\r\n        {person.name} {person.number}\r\n        <button onClick={() => props.deletePerson(person)}>delete</button>\r\n      </p>\r\n    )}\r\n  </ul>    \r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>name: <input value={props.name} onChange={props.handleName}/></div>\r\n      <div>number: <input value={props.num} onChange={props.handleNum}/></div>\r\n      <div><button type=\"submit\">add</button></div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <form>\r\n      <div>filter shown with <input value={props.search} onChange={props.handleSearch}/></div>      \r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    // The color of the Notification bar should be changed according to whether it is a \r\n    // success/error message, but it is not possible for me right now.\r\n    <div className=\"notification\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNum, setNewNum ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ message, setMessage ] = useState(null) \n\n  useEffect(() => {\n    personService\n      .getAll()\n        .then(initialPersons => {\n          setPersons(initialPersons)\n        })\n  }, [])\n  \n  const addPerson = (event) => {\n    event.preventDefault()\n    const name = newName\n    const number = newNum\n    setNewName('')\n    setNewNum('')\n    const personObject = {\n      name: name,\n      number: number\n    }\n    if (persons.some(person => person.name === name && person.number === number)) {\n      window.alert(`${name} ${number} is already added to phonebook`)\n    } \n    else if (persons.some(person => person.name === name)) {\n      const result = window.confirm(`${name} is already added to phonebook, replace with a new one?`)\n      if (result) {\n        const p = persons.find(p => p.name === name)        \n        personService\n        .update(p.id, personObject)\n          .then((returnedPerson) => {\n            setPersons(persons.map(person => person.id !== p.id ? person : returnedPerson))\n            setMessage(`Updated ${name}`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch(error =>\n            setMessage(`${error.response.data.error}`))\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n      }\n    }  \n    else {\n      personService\n      .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setMessage(`Added ${personObject.name}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n      })\n        .catch(error => {\n          setMessage(`${error.response.data.error}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const deletePerson = (person) => {\n    const result = window.confirm(`Delete ${person.name}?`)\n    if (result) {\n      personService\n      .remove(person.id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== person.id))\n          setMessage(`Removed ${person.name}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumChange = (event) => {\n    setNewNum(event.target.value)\n  }\n\n  const handleSearch = (event) => {\n    setNewSearch(event.target.value)\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter search={newSearch} handleSearch={handleSearch}/>\n      <h3>add a new entry</h3>\n      <PersonForm addPerson={addPerson} handleName={handleNameChange} handleNum={handleNumChange} name={newName} num={newNum} setMessage={setMessage} />\n      <h3>Numbers</h3>\n      <Persons persons={persons} search={newSearch} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}